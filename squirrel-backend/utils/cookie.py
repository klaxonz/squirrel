import http.cookiejar as cookielib

from core.config import settings
from utils.url_helper import extract_top_level_domain


def filter_cookies_to_query_string(target_url):
    """
    筛选与目标URL匹配的所有相关Cookie，并转换为分号分隔的格式（k1=v1; k2=v2;）。

    :param target_url: 目标URL，用于确定需匹配的顶级域名
    :return: 筛选后Cookie的分号分隔格式字符串
    """
    file_path = settings.get_cookies_http_file_path()
    cj = cookielib.MozillaCookieJar()
    cj.load(file_path, ignore_discard=True, ignore_expires=True)

    domain = extract_top_level_domain(target_url)
    filtered_cj = cookielib.CookieJar()

    for cookie in cj:
        if cookie.domain.endswith(domain):
            filtered_cj.set_cookie(cookie)

    # 手动构建分号分隔的Cookie字符串
    cookie_strings = [f"{cookie.name}={cookie.value}" for cookie in filtered_cj]
    cookie_semicolon_string = '; '.join(cookie_strings)
    return cookie_semicolon_string


def json_cookie_to_netscape(cookies: dict, domain_list: list, output_file):
    with open(output_file, 'w') as f:
        # 写入Netscape格式的文件头
        f.write("# Netscape HTTP Cookie File\n")
        f.write("# This file is generated by yt-dlp.  Do not edit.\n")
        f.write("\n")

        for site in cookies:
            match_domain = False
            if domain_list:
                for domain in domain_list:
                    if domain in site:
                        match_domain = True
                        break
            if domain_list and not match_domain:
                continue

            site_cookie = cookies[site]
            for cookie in site_cookie:

                if 'expirationDate' not in cookie or cookie['expirationDate'] == '' or cookie['expirationDate'] == 0:
                    continue
                domain = cookie['domain']
                if domain.startswith('.'):
                    domain = domain[1:]

                line = "\t".join([
                    domain,
                    str(cookie['httpOnly']),
                    cookie['path'],
                    str(cookie['secure']),
                    str(cookie['expirationDate']).split('.')[0],
                    cookie['name'],
                    cookie['value'],
                ])
                f.write(line + "\n")
